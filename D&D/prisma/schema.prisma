generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                 String      @id @default(uuid())
  nome               String
  nickname           String      @unique
  email              String      @unique
  senha              String
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  reset_token        String?
  reset_token_expiry DateTime?
  nivel_usuario      Int         @default(1)
  experiencia_total  Int         @default(0)
  conquistas         String?
  preferencias       String?
  ultimo_login       DateTime?
  characters         Character[]

  @@map("usuarios")
}

model Character {
  id                  String           @id @default(uuid())
  userId              String
  nome                String           @unique
  apelido             String?
  raca                String
  classe              String
  forca               Int
  destreza            Int
  constituicao        Int
  inteligencia        Int
  sabedoria           Int
  carisma             Int
  idade               Int
  altura              Int
  peso                Int
  corOlhos            String
  corCabelo           String
  corPele             String
  estilo              String
  alinhamento         String
  origem              String
  motivacao           String
  traumas             String
  inimigos            String
  segredo             String
  armas               String
  armadura            String
  itensEspeciais      String
  proficiencias       String
  magias              String
  poderes             String
  idiomas             String
  conhecimentos       String
  personalidade       String
  tracos              String
  ideais              String
  vinculos            String
  defeitos            String
  nivel               Int              @default(1)
  experiencia         Int              @default(0)
  pontos_vida_atuais  Int              @default(0)
  pontos_vida_maximos Int              @default(0)
  dinheiro_cobre      Int              @default(0)
  dinheiro_prata      Int              @default(0)
  dinheiro_ouro       Int              @default(0)
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  imagem_url          String?
  pseudonimo          String?          @unique
  titulo              String?          @unique
  familia             String?
  avatar_url          String?
  skills              CharacterSkill[]
  user                User             @relation(fields: [userId], references: [id])

  @@map("personagens")
}

model Race {
  id                    String   @id
  nome                  String
  descricao             String
  emoji                 String
  habilidades_especiais String
  altura_media_cm       Int
  peso_medio_kg         Int
  expectativa_vida      Int
  bonus_forca           Int      @default(0)
  bonus_destreza        Int      @default(0)
  bonus_constituicao    Int      @default(0)
  bonus_inteligencia    Int      @default(0)
  bonus_sabedoria       Int      @default(0)
  bonus_carisma         Int      @default(0)
  criado_em             DateTime @default(now())
  atualizado_em         DateTime @updatedAt

  @@map("racas")
}

model CharacterClass {
  id                   String   @id
  nome                 String
  descricao            String
  emoji                String
  icone_nome           String
  atributo_principal   String
  dado_vida            Int
  habilidades_iniciais String
  tipo_armadura        String?
  armas_permitidas     String?
  escolas_magia        String?
  criado_em            DateTime @default(now())
  atualizado_em        DateTime @updatedAt

  @@map("classes_personagem")
}

model Skill {
  id               String           @id @default(uuid())
  nome             String           @unique
  descricao        String
  emoji            String
  categoria        String
  atributo_base    String
  tipo             String
  criado_em        DateTime         @default(now())
  atualizado_em    DateTime         @updatedAt
  character_skills CharacterSkill[]

  @@map("habilidades")
}

model CharacterSkill {
  id            String    @id @default(uuid())
  characterId   String
  skillId       String
  maestria      Int       @default(1)
  experiencia   Int       @default(0)
  criado_em     DateTime  @default(now())
  atualizado_em DateTime  @updatedAt
  skill         Skill     @relation(fields: [skillId], references: [id])
  character     Character @relation(fields: [characterId], references: [id], onDelete: Cascade)

  @@unique([characterId, skillId])
  @@map("personagem_habilidades")
}
